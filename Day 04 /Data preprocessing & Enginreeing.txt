 Data Preprocessing and Feature Engineering
====================================================

This module focuses on preparing raw data for use in machine learning algorithms, including cleaning, transforming, and preserving privacy.

1. Data Analysis and Preprocessing Techniques
---------------------------------------------
Understand the dataset structure, check data types, null values, and basic statistics.

Example:
    df.head()        # View first few rows
    df.info()        # Get data types and nulls
    df.describe()    # Summary statistics

2. Data Cleaning
----------------
Clean the data by handling missing values and inconsistencies.

Techniques:
- Numeric: Mean/Median imputation
- Categorical: Mode or a placeholder (e.g., 'Unknown')

Example:
    df['Age'].fillna(df['Age'].mean(), inplace=True)

3. Encoding Categorical Features
--------------------------------
Convert text labels into numbers for model compatibility.

Techniques:
- Label Encoding
- One-Hot Encoding

Example:
    df = pd.get_dummies(df, columns=['City'])

4. Outlier Detection
--------------------
Detect outliers using visualization methods like boxplots.

Example:
    sns.boxplot(x=df['Salary'])

5. Feature Engineering
----------------------
Create new features or modify existing ones to improve model performance.

Types:
- Transformation (log, sqrt)
- Interaction (e.g., product of two features)
- Ratios (e.g., salary per age)

Example:
    df['Salary_per_Age'] = df['Salary'] / df['Age']

6. Dimensionality Reduction with PCA
------------------------------------
Use PCA to reduce the number of features while preserving variance.

Steps:
- Standardize features
- Apply PCA
- Select top components

Example:
    pca = PCA(n_components=2)

7. Privacy-Preserving Data Preprocessing
----------------------------------------
Protect sensitive data using anonymization and differential privacy.

Techniques:
- Anonymization: remove identifiers
- Differential Privacy: add noise to data

Example:
    noise = np.random.laplace(loc=0.0, scale=sensitivity/epsilon, size=df.shape[0])
    df['Noisy_Salary'] = df['Salary'] + noise
